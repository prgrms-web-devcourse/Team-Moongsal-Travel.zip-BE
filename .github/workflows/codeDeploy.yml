name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Redis create
        uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: '6.x'
          run: redis-cli ping

      - name: Create mongo Docker container
        uses: DigiPie/mongo-action@v2.0.1
        with:
          image_version: latest
          port: 27017

      - name: Install mongosh command
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh

      - name: Test mongo connection
        run: "sudo mongosh localhost:27017"

      - name: application.yml created
        uses: actions/checkout@v3
      - run: touch ./src/main/resources/application.yml
      - run: echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml
      - uses: actions/upload-artifact@v3
        with:
          name: application.yml
          path: ./src/main/resources/application.yml

      - name: Grant execute permission for gradle
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -Pprofile=prod

      - name: Make zip file
        run: zip -r ./travel.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_IAM_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_IAM_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ${{ secrets.AWS_REGION }} ./travel.zip s3://${{ secrets.AWS_S3_BUCKET }}/travel.zip

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_IAM_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_IAM_SECRET_KEY }}
        run: |
          aws deploy create-deployment \
          --application-name travel-zip-deploy-group \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name travel-zip-deploy-group \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=${{ secrets.AWS_S3_BUCKET }},bundleType=zip,key=travel.zip \
          --region ${{ secrets.AWS_REGION }}